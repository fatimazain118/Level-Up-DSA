// Knapsack
// Max profit with weight "W"
// Recursion

#include<bits/stdc++.h>
using namespace std;

int knapsack(int wts[], int prices[], int N, int W){
    //base
    if(N==0 or W==0){       //items are zero or weight is zero
        return 0;
    }

    //rec
    int inc, exc;
    if(wts[N-1] > W){
        return knapsack(wts,prices,N-1,W);
    }
    else if(wts[N-1]<=W){
        inc = prices[N-1] + knapsack(wts,prices,N-1,W-wts[N-1]);
    }
    exc = knapsack(wts,prices,N-1,W);           //excluding the rightmost element
        return max(inc, exc);
}

int main(){
    int wts[] = {2,7,3,4};
    int prices[] = {5,20,20,50};

    int N = 4;
    int W = 11;

    cout<<knapsack(wts,prices,N,W)<<endl;
    return 0;
}
________________________
Output:
75   //profit by 4,3,2
