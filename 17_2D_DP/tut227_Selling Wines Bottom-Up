// Wines Selection
// Bottom up

#include<bits/stdc++.h>
using namespace std;

int wines(int price[], int n){
    vector<vector<int>> dp(n+1, vector<int>(n+1,0));
    
    for(int i=n-1; i>=0; i--){

        //bottom row to top row
        for(int j=0; j<n; j++){
            if(i==j){
                dp[i][j] = n*price[i];        //for diagonal compute like this
            }
            else if(i<j){

                int y = n-(j-i);
                int pick_left = price[i]*y + dp[i+1][j];
                int pick_right = price[j]*y + dp[i][j-1];

                dp[i][j] = max(pick_left, pick_right);
            }
        }
    }
     //print dp matrix
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
    }
return dp[0][n-1];
}

int main(){
    int a[] = {2,3,5,1,4};
    int n = 5;
    int dp[10][10] = {0};

    cout<<wines(a,n)<<endl;
    return 0;
}
____________________________________________
Output:
10 23 43 45 50 
0 15 37 40 48
0 0 25 29 41
0 0 0 5 24
0 0 0 0 20
50
