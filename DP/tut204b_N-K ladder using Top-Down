//N-K ladder (Top-Down approach)
// O(nk)

#include<bits/stdc++.h>
using namespace std;

int countWaysTD(int n, int k, int *dp)
{
    if(n==0){                  // standing on ground
        return 1;
    }
    if(n<0){
        return 0;
    }
    //check if state is already computed
    if(dp[n]!=0){              //jo bhi sub-problem compute hoti jai usko dp array me daalte jao
        return dp[n];
    }
    //recursive case 
    int ans = 0;
    for(int jump = 1; jump<=k; jump++){
        ans += countWaysTD(n-jump,k,dp);
    }
    return dp[n] =ans;
}

int main(){
    int n,k;
    cin>>n>>k;

int dp[1000] = {0};           //making dp array
    cout<<countWaysTD(n,k,dp)<<endl;
    return 0;
}
____________________________________
Output :
4 3
7
