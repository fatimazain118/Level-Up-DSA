//N-K ladder 
//Bottom-Up Optimised(O(n+k))

#include<bits/stdc++.h>
using namespace std;

int countWaysOpt(int n, int k){
    vector<int> dp(n+1,0);

    dp[0] = dp[1] = 1;

    for(int i=2; i<=k; i++){   //dividing in two for loops one upto k
        dp[i] = 2*dp[i-1];
    }

    for(int i=k+1; i<=n; i++){
        dp[i] = 2*dp[i-1] - dp[i-k-1];
    }
    return dp[n];
}

int main(){
    int n,k;
    cin>>n>>k;

int dp[1000] = {0};           //making dp array
    cout<<countWaysOpt(n,k)<<endl;
    return 0;
}
______________________________
Output:
4 3
7
