//Square_root

#include<bits/stdc++.h>
using namespace std;

float square_root(int N, int p){
    int s = 0;
    int e = N;
    float ans = 0;

    //Binary Search for Integer part(Search space (0.....N))
    while(s<=e){
        int mid = (s+e)/2;
        if(mid*mid ==  N){
            return mid;
        }
        else if(mid*mid < N){
            ans = mid;
            s = mid + 1;
        }
        else{
            e = mid - 1;
        }
    }

    //Linear Search for each space of floating part
    float inc = 0.1;
    for(int place = 1; place <= p; place++){

        //do linear search
        while(ans*ans <= N){
            ans += inc;  //0.1 increase krte jao
        }

        //take one step back value
        ans = ans - inc;
        //reducing the value inc for next itteration 3.10, 3.11...
        inc = inc/10.0;
    }
    return ans;
}
int main(){
    int n,p;
    cin>>n>>p;  //p is the precision value kitne digit point k bd chahiye

    cout<<square_root(n,p)<<endl;

    return 0;
}

//In logn + pN time
