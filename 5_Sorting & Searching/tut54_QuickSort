//QuickSort
//T.C - O(NlogN -- best case)
        //O(N^2)--Worst case

#include<bits/stdc++.h>   //using this compilation is slow
// #include<iostream>
// #include<vector>
using namespace std;
int partition(vector<int> &a, int s, int e){
    int pivot = a[e];
    int i = s-1;

    for(int j=s; j<e; j++){
        if(a[j] < pivot){
            i++;
            swap(a[i],a[j]);
        }
    }
    swap(a[i+1],a[e]); //to make pivot to it's correct place
    return i+1;   //return the index of pivot element
}

void quicksort(vector<int> &a, int s, int e){  //as in c++ by default we have pass by value
     
     //Base Case
     if(s>=e){
         return;
     }

     //Recursive Case
     int p = partition(a,s,e);  //this gives the correct index of pivot element
     quicksort(a,s,p-1);
     quicksort(a,p+1,e);
}

int main(){
    vector<int> arr{10,5,2,0,7,6,4};
    cout<< arr.size()<<endl;
    int n = arr.size();

    quicksort(arr,0,n-1);

    for(int x : arr){
        cout<< x <<" ";
    }

    return 0;
}
