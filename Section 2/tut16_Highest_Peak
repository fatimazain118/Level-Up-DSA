#include<iostream>
#include<vector>
using namespace std;

int Highest_Mountain(vector<int> a)
{
  int n = a.size();

  int largest = 0;

  for(int i=0; i<=n-2; i++)  //as 1st element and last element can not be peak
  {
      //checking a[i] is peak or not
      if(a[i] > a[i-1] and a[i] > a[i+1])
      {
          //do some work
          int count = 1;
          int j = i;

          //count backward (left)
          while(j>=1 and a[j] > a[j-1])   //if j becomes 0 then because of j-1 it'll give segmentation fault
          {
              j--;
              count++;
          }

          //count forward (right)
          while (i<=n-2 and a[i] > a[i+1])
          {
              i++;
              count++;
          }
          largest = max(largest, count);
      }
  }
  return largest;
}

int main()
{
    vector<int> arr{5,6,1,2,3,4,5,4,3,2,0,1,2,3,-2,4};

    cout<<Highest_Mountain(arr);

    return 0;
}
