 //pair code

 #include<iostream>
 #include<vector>
 #include<unordered_set>

 using namespace std;

vector<int> pairSum(vector<int> arr, int target){
    //Logic
    unordered_set<int> s;
    vector<int> result;  //result will return in the form of vector integers, qki pairSum has also his return type

for(int i=0; i<arr.size(); i++)
{
    int x = target - arr[i];
    if(s.find(x) != s.end())
    {
        result.push_back(x);
        result.push_back(arr[i]);
        return result;
    }
    //insert the current no. in the set
    s.insert(arr[i]);  //this step should not be placed in the beginning as fill the set as we go 
                       //along else will not get distinct pair(same no. can be add twice)
}
return {};
}

 int main(){
     vector <int> arr{10,5,2,3,-6,9,11};
     int Sum = 4;

     auto p = pairSum(arr, Sum);
     if(p.size() == 0)
     {
         cout<<"No such pair found;"<<endl;
     }
     else{
         cout<<p[0]<<","<<p[1]<<endl;
     }
     return 0;
 }
