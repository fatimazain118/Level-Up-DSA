#include<iostream>
#include<vector>
#include<unordered_set>
using namespace std;

int longestChain(vector<int> arr)
{
  unordered_set<int> s;
  //Data inside the set
  for(int x : arr)
     s.insert(x);

     //Iterate over the array
     int largestLen = 1;

     for(auto element : s)
     {
         int parent = element - 1;
         if(s.find(parent) == s.end())
         {
             //find entire band/chain starting from element
             int next_no = element +1;
             int count = 1;

             while(s.find(next_no) != s.end())
             {
                 next_no++;
                 count++;
             }
             if(count > largestLen) largestLen = count;
         }
     }
     return largestLen;
}
int main()
{
    vector<int> arr{1,9,3,0,18,5,2,4,10,7,12,6};
    cout<<longestChain(arr)<<endl;

    return 0;
}

t.c - O(N)
S.c - O(N)
