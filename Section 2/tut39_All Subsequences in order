//In subset and subsequence you pick the non contiguous element
//Substring should be continuous

#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
using namespace std;

//sorted subsequence Using Recursion
void subsequences(string s, string o, vector<string> &v){
    //base case
    if(s.size() == 0){
        v.push_back(o);
        return;
    }

    //rec calls
    char ch =s[0];
    string reduced_input = s.substr(1);
    //include current
    subsequences(reduced_input, o+ch, v);
    //excludes current
    subsequences(reduced_input, o, v);
}

bool compare(string s1, string s2){
    if(s1.length() == s2.length()){
        return s1 < s2;
    }
    return s1.length() < s2.length();
}
int main(){
    string s;
    cin>>s;
    vector<string> v;
    string output = "";
    subsequences(s,output,v);

    //sort
    sort(v.begin(), v.end(), compare);

    for(auto s : v){
        cout<< s << ",";
    }
    return 0;
}
